@model EnhancedBlogger.ViewModels.AWorkSpaceViewModel
@{
    ViewData["Title"] = "me & A Subtheme";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
    For more information on enabling MVC for empty projects,
    visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    <section class="wsGrid-container">
        <div class="wsTitle">
            <h3>My Work Space</h3>
        </div>
        <div class="wsMain">
            <h2>Topics and items</h2>

            <h6><a class="myButtonC"  asp-action="CreateTopic">CreateNewTopic</a></h6>
            @foreach (var grp in Model.myTopicsList)
            {
                <h4>
                    <a  class="myButtonE" asp-action="EditNote" asp-route-id="@grp.NoteTopicId">EditTopic</a>
                    Topic#:@Html.DisplayFor(m => grp.NoteTopicId), @Html.DisplayFor(m => grp.NoteTopicTitle)
                    Re:@Html.DisplayFor(m => grp.NoteTopicComment)
                </h4>
                <a  class="myButtonC" asp-action="CreateTopicItem">CreateNewItem</a>

                int precheck = grp.NoteTopicId;
                @foreach (var item in Model.myItemsList)
                {
                    int? chk = item.NoteTopicId;
                    if (chk == precheck)
                    {
                        <h5>
                            <a class="myButtonE" asp-action="EditTopicItem" asp-route-id="@item.TopicItemId">EditItem</a>
                            Item#:@Html.DisplayFor(m => item.TopicItemId), 
                            Topic#:@Html.DisplayFor(m => item.NoteTopicId), Post#:@Html.DisplayFor(m => item.BlogPostId)
                            My thoughts: @Html.DisplayFor(m => item.TopicItemThought)
                        </h5>

                    }
                }
            }
        </div>

        <div class="wsKeywords">
            <h4> Keywords of interest</h4>
            <h6><a  class="myButtonC" asp-action="CreateKeyword">CreateKeyword</a></h6>
            @foreach (var grp in Model.myKeywordList)
            {
                <h5>
                    <a  class="myButtonE" asp-action="EditKeyword" asp-route-id="@grp.TopicKeywordId">EditKeyword</a>
                    Key#:@Html.DisplayFor(m => grp.TopicKeywordId), 
                    Topic#:@Html.DisplayFor(m => grp.TopicItemId), 
                    Keyword: @Html.DisplayFor(m => grp.TopicKeywordName)<br />@Html.DisplayFor(m => grp.TopicKeywordRemark)
                </h5>

            }
        </div>

        <div class="wsLinks">
            <h4>My Links</h4>
            <a  class="myButtonC" asp-action="CreateLink">CreateLink</a>
            @foreach (var grp in Model.myLinkList)
            {
                <h5>
                    <a class="myButtonE" asp-action="EditLink" asp-route-id="@grp.TopicLinkId">EditLink</a>
                    Link#:@Html.DisplayFor(m => grp.TopicLinkId), 
                    Item#:@Html.DisplayFor(m => grp.TopicItemId) Re: @Html.DisplayFor(m => grp.TopicLinkRemark)
                </h5>

            }
        </div>

        <div class="wsTopics">
            <h4>My Note Topics</h4>
            @{
                ViewBag.myTopics = Model.myTopicsList;
            }
            @foreach (var grp in Model.myTopicsList)
            {
                <h5>
                    Topic#:@Html.DisplayFor(m => grp.NoteTopicId) 
                    @Html.DisplayFor(m => grp.NoteTopicTitle)<br />@Html.DisplayFor(m => grp.NoteTopicComment)
                </h5>
            }
        </div>
        <div class="wsGroups">
            <h4>My Groupings</h4>
            @foreach (var wrk in Model.logListGroups)
            {
                <h5>
                    Group#:@Html.DisplayFor(m => wrk.LogGroupingId), 
                    @Html.DisplayFor(m => wrk.LogGroupingtitle)<br />@Html.DisplayFor(m => wrk.LogGroupingComment)
                </h5>
            }
        </div>
    </section>
}


